// Reboot
// Normalization of HTML elements, inspired by Bootstrap, Normalize, and Sanitize
// Ref: Bootstrap, Normalize, Sanitise
// https://piccalil.li/blog/a-more-modern-css-reset/
// https://www.joshwcomeau.com/css/custom-css-reset/
// https://github.com/jensimmons/cssremedy
// https://github.com/mayank99/reset.css

*,
::before,
::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* 1 */
}

// Prevent adjustments of font size after orientation changes in iOS.
:where(html) {
  text-size-adjust: none;
  color-scheme: dark light;
  scrollbar-gutter: stable;
}

/**
 * 2. Break words to prevent overflow in all browsers (opinionated).
 * 3. Use a 4-space tab width in all browsers (opinionated).
 * 4. Remove the grey highlight on links in iOS (opinionated).
 */
:where(:root) {
  overflow-wrap: break-word; /* 2 */
  -moz-tab-size: 4; /* 3 */
  tab-size: 4; /* 3 */
  -webkit-tap-highlight-color: transparent; /* 4 */
}

:where(:root) {
  @if $enable-smooth-scroll {
    @media (prefers-reduced-motion: no-preference) {
      scroll-behavior: smooth;
    }
  }
}

// Body
// 2. As a best practice, apply a default `background-color`.
:where(body) {
  min-height: 100vh;
  font-family: var(--#{$prefix}body-font-family);
  /* TODO: Font Size */
  font-weight: var(--#{$prefix}body-font-weight);
  line-height: var(--#{$prefix}body-line-height);
  text-align: var(--#{$prefix}body-text-align);
  color: var(--#{$prefix}body-color);
  background-color: var(--#{$prefix}body-bg); /* 2 */
  -webkit-font-smoothing: antialiased;
}

// Remove default margin in favour of better control in authored CSS
// :where(body, h1, h2, h3, h4, h5, h6, p, figure, blockquote, dl, dd) {
//   margin-block-end: 0;
// }

// Set shorter line heights on headings and interactive elements
:where(h1, h2, h3, h4, h5, h6, button, input, label) {
  line-height: $headings-line-height;
}

/**
 * 1. Correct the inheritance of border color in Firefox.
 * 2. Add the correct box sizing in Firefox.
 * 3. Show the overflow in Edge and IE.
 */
:where(hr) {
  box-sizing: content-box; /* 2 */
  color: $hr-color; /* 1 */
  height: 0; /* 2 */
  overflow: visible; /* 3 */

  border: 0;
  margin: $hr-margin-y 0;
  border-top: $hr-border-width solid $hr-border-color;
  opacity: $hr-opacity;
}

// Typography
// 1. Remove top margins from headings
//    By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
//    margin for easier control within type scales as it avoids margin collapsing.
%heading {
  //margin-top: 0; /* 1 */
  //margin-bottom: $headings-margin-bottom;
  font-family: $headings-font-family;
  font-style: $headings-font-style;
  font-weight: $headings-font-weight;
  line-height: var(--#{$prefix}heading-line-height);
  color: var(--#{$prefix}heading-color);
  text-wrap: balance;
}

:where(h1) {
  @extend %heading;
  /* TODO: Font Size */
}

:where(h2) {
  @extend %heading;
  /* TODO: Font Size */
}

:where(h3) {
  @extend %heading;
  /* TODO: Font Size */
}

:where(h4) {
  @extend %heading;
  /* TODO: Font Size */
}

:where(h5) {
  @extend %heading;
  /* TODO: Font Size */
}

:where(h6) {
  @extend %heading;
  /* TODO: Font Size */
}

// Reset margins on paragraphs
// Similarly, the top margin on `<p>`s get reset. However, we also reset the
// bottom margin to use `rem` units instead of `em`.
:where(p) {
  //  margin-top: 0;
  margin-bottom: $paragraph-margin-bottom;
  overflow-wrap: break-word;
}

// Abbreviations
// 1. Add the correct text decoration in Chrome, Edge, Opera, and Safari.
// 2. Add explicit cursor to indicate changed behavior.
// 3. Prevent the text-decoration to be skipped.
// 4. Remove the bottom border in Chrome, Edge, Opera, and Safari.
:where(abbr[title]) {
  text-decoration: underline; /* 1 */
  text-decoration: underline dotted; /* 1 */
  cursor: help; /* 2 */
  text-decoration-skip-ink: none; /* 3 */
  border-bottom: none; /* 4 */
}

:where(address) {
  margin-bottom: $spacer;
  font-style: normal;
  line-height: inherit;
}

// Lists
:where(ul[role="list"], ol[role="list"], dt) {
  list-style: none;
  font-weight: inherit;
}

// 1. Undo browser default
:where(dd) {
  margin-bottom: 0.5rem;
  margin-left: 0; /* 1 */
}

// Blockquote
:where(blockquote) {
  margin: 0 0 1rem;
}

// Strong
// Add the correct font weight in Chrome, Edge, and Safari
:where(b, strong) {
  font-weight: $font-weight-bolder;
}

// Small
// Add the correct font size in all browsers
:where(small) {
  font-size: $small-font-size;
  /* TODO: Font Size */
}

// Mark
:where(mark) {
  padding: $mark-padding;
  color: var(--#{$prefix}highlight-color);
  background-color: var(--#{$prefix}highlight-bg);
}

// Sub and Sup
// Prevent `sub` and `sup` elements from affecting the line height in all browsers.
:where(sub, sup) {
  position: relative;
  font-size: $sub-sup-font-size;
  line-height: 0;
  vertical-align: baseline;
}

:where(sub) {
  bottom: -0.25em;
}

:where(sup) {
  top: -0.5em;
}

// Links
:where(a) {
  background-color: transparent;
  text-underline-offset: $link-text-underline-offset;
  color: rgba(
    var(--#{$prefix}link-color-rgb),
    var(--#{$prefix}link-opacity, 1)
  );
  text-decoration: $link-decoration;

  &:hover {
    --#{$prefix}link-color-rgb: var(--#{$prefix}link-hover-color-rgb);
    text-decoration: $link-hover-decoration;
  }
}

// Undo styles for placeholder links/named anchors (without href).
:where(a:not([href]):not([class])) {
  &,
  &:hover {
    color: inherit;
    text-decoration: none;
  }
}

// Code
:where(pre, code, kbd, samp) {
  font-family: $font-family-code;
  font-size: 1em; /* Correct the odd `em` font sizing in all browsers. */
  /* TODO: Font Size */
}

// 1. Remove browser default top margin
// 2. Reset browser default of `1em` to use `rem`s
// 3. Don't allow content to break outside
:where(pre) {
  display: block;
  margin-top: 0; /* 1 */
  margin-bottom: $spacer; /* 2 */
  overflow: auto; /* 3 */
  font-size: $code-font-size;
  /* TODO: Font Size */
  color: $pre-color;
  white-space: pre-wrap;

  // Account for some code outputs that place code tags in pre tags
  code {
    font-size: inherit;
    /* TODO: Font Size */
    color: inherit;
    word-break: normal;
  }
}

:where(code) {
  font-size: $code-font-size;
  /* TODO: Font Size */
  color: var(--#{$prefix}code-color);
  word-wrap: break-word;

  // Streamline the style when inside anchors to avoid broken underline and more
  a > & {
    color: inherit;
  }
}

:where(kbd) {
  padding: $kbd-padding-y $kbd-padding-x;
  font-size: $kbd-font-size;
  /* TODO: Font Size */
  color: $kbd-color;
  background-color: $kbd-bg;
  @include border-radius($border-radius-sm);

  kbd {
    padding: 0;
    font-size: 1em;
    /* TODO: Font Size */
  }
}

// Figures
// Apply a consistent margin strategy (matches our type styles).
:where(figure) {
  margin: 0 0 $spacer;
}

// Media
// Change the alignment on media elements in all browsers (opinionated).
:where(audio, canvas, iframe, svg, video, img, picture, embed, object) {
  max-width: 100%;
  display: block;
}

:where(img, svg, video, canvas, picture) {
  height: auto;
  block-size: auto;
}

:where(audio) {
  width: 100%;
}

:where(audio:not([controls])) {
  display: none;
}

:where(picture) {
  display: contents;
}

:where(source) {
  display: none;
}

// Change the fill color to match the text color in all browsers (opinionated).
:where(svg:not([fill])) {
  fill: currentColor;
}

// Tables
:where(table) {
  caption-side: bottom;
  border-collapse: collapse;
  border-color: currentColor;
  text-indent: 0;
}

:where(caption) {
  padding-top: $table-cell-padding-y;
  padding-bottom: $table-cell-padding-y;
  color: $table-caption-color;
  text-align: left;
}

// 1. Removes font-weight bold by inheriting
// 2. Matches default `<td>` alignment by inheriting `text-align`.
// 3. Fix alignment for Safari
:where(th) {
  font-weight: $table-th-font-weight; /* 1 */
  text-align: inherit; /* 2 */
}

:where(thead, tbody, tfoot, tr, td, th) {
  border-color: inherit;
  border-style: solid;
  border-width: 0;
}

// Forms
// 1. Allow labels to use `margin` for spacing.
:where(label) {
  display: inline-block; /* 1 */
}

// Remove the default `border-radius` that macOS Chrome adds.
// See https://github.com/twbs/bootstrap/issues/24093
:where(button) {
  border-radius: 0;
}

// Explicitly remove focus outline in Chromium when it shouldn't be
// visible (e.g. as result of mouse click or touch tap). It already
// should be doing this automatically, but seems to currently be
// confused and applies its very visible two-tone outline anyway.
:where(button:focus:not(:focus-visible)) {
  outline: 0;
}

// 1. Remove the margin in Firefox and Safari
:where(input, button, select, optgroup, textarea) {
  margin: 0;
  font: inherit;
  overflow: visible;
}

// Remove the inheritance of text transform in Firefox
:where(button, select) {
  text-transform: none;
}

// Set the cursor for non-`<button>` buttons
// Details at https://github.com/twbs/bootstrap/pull/30562
:where([role="button"]) {
  cursor: pointer;
}

:where(select) {
  // Remove the inheritance of word-wrap in Safari.
  // See https://github.com/twbs/bootstrap/issues/24990
  word-wrap: normal;

  // Undo the opacity change from Chrome
  &:disabled {
    opacity: 1;
  }
}

// Remove the dropdown arrow only from text type inputs built with datalists in Chrome.
// See https://stackoverflow.com/a/54997118
:where(
    [list]:not([type="date"]):not([type="datetime-local"]):not(
        [type="month"]
      ):not([type="week"]):not([type="time"])::-webkit-calendar-picker-indicator
  ) {
  display: none !important;
}

// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
//    controls in Android 4.
// 2. Correct the inability to style clickable types in iOS and Safari.
// 3. Opinionated: add "hand" cursor to non-disabled button elements.
:where(button, [type="button"], [type="reset"], [type="submit"]) {
  -webkit-appearance: button; /* 2 */
  appearance: button; /* 2 */

  @if $enable-button-pointers {
    &:not(:disabled) {
      cursor: pointer; /* 3 */
    }
  }
}

:where(label:has(> input:disabled), label:has(+ input:disabled)) {
  cursor: not-allowed;
}

// Remove inner border and padding from Firefox, but don't restore the outline like Normalize.
::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

// 1. Textareas should really only resize vertically so they don't break their (horizontal) containers.
:where(textarea) {
  resize: vertical; /* 1 */
  overflow: auto;
}

// Make sure textareas without a rows attribute are not tiny
:where(textarea:not([rows])) {
  min-height: 10em;
}

// 1. Browsers set a default `min-width: min-content;` on fieldsets,
//    unlike e.g. `<div>`s, which have `min-width: 0;` by default.
//    So we reset that to ensure fieldsets behave more like a standard block element.
//    See https://github.com/twbs/bootstrap/issues/12359
//    and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
// 2. Reset the default outline behavior of fieldsets so they don't affect page layout.
:where(fieldset) {
  min-width: 0; /* 1 */
  padding: 0; /* 2 */
  margin: 0; /* 2 */
  border: 0; /* 2 */
}

// 1. By using `float: left`, the legend will behave like a block element.
//    This way the border of a fieldset wraps around the legend if present.
// 2. Fix wrapping bug.
//    See https://github.com/twbs/bootstrap/issues/29712
:where(legend) {
  box-sizing: border-box;
  float: left; /* 1 */
  width: 100%;
  padding: 0;
  margin-bottom: $legend-margin-bottom;
  font-weight: $legend-font-weight;
  line-height: inherit;
  font-size: $legend-font-size;
  /* TODO: Font Size */

  + * {
    clear: left; /* 2 */
  }
}

// Fix height of inputs with a type of datetime-local, date, month, week, or time
// See https://github.com/twbs/bootstrap/issues/18842
::-webkit-datetime-edit-fields-wrapper,
::-webkit-datetime-edit-text,
::-webkit-datetime-edit-minute,
::-webkit-datetime-edit-hour-field,
::-webkit-datetime-edit-day-field,
::-webkit-datetime-edit-month-field,
::-webkit-datetime-edit-year-field {
  padding: 0;
}

// Correct the cursor style of increment and decrement buttons in Safari.
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

// Correct the text style of placeholders in Chrome, Edge, and Safari.
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

// 1. This overrides the extra rounded corners on search inputs in iOS so that our
//    `.form-control` class can properly style them. Note that this cannot simply
//    be added to `.form-control` as it's not specific enough. For details, see
//    https://github.com/twbs/bootstrap/issues/11586.
// 2. Correct the outline style in Safari.
:where([type="search"]) {
  -webkit-appearance: textfield; /* 1 */
  appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

// Remove the inner padding in Chrome and Safari on macOS.
::-webkit-search-decoration {
  -webkit-appearance: none;
}

// Remove padding around color pickers in webkit browsers
::-webkit-color-swatch-wrapper {
  padding: 0;
}

// 1. Correct the inability to style clickable types in iOS and Safari.
// 2. Change font properties to `inherit` in Safari.
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

// 1. Inherit font family and line height for file input buttons
// 2. Correct the inability to style clickable types in iOS and Safari.
::file-selector-button {
  font: inherit; /* 1 */
  -webkit-appearance: button; /* 2 */
  appearance: button; /* 2 */
}

// Correct element displays
:where(output) {
  display: inline-block;
}

// Remove border from iframe
:where(iframe) {
  border-style: none;
  border: 0;
}

// Summary
// 1. Add the correct display in all browsers
:where(summary) {
  display: list-item; /* 1 */
  cursor: pointer;
}

// Progress
// Add the correct vertical alignment in Chrome, Firefox, and Opera.
:where(progress) {
  vertical-align: baseline;
}

// Add the correct display in Edge, IE 10+, and Firefox.
:where(details) {
  display: block;
}

:where(details > summary:first-of-type) {
  display: list-item;
}

// Add the correct styles in Safari.
:where(dialog, [popover]) {
  border: none;
  background: none;
  color: inherit;
  inset: unset;
  max-width: unset;
  max-height: unset;
}

:where(dialog:not([open], [popover]), [popover]:not(:popover-open)) {
  display: none !important;
}

// Change the cursor on busy elements in all browsers (opinionated).
:where([aria-busy="true" i]) {
  cursor: progress;
}

// Change the cursor on disabled, not-editable, or otherwise
// inoperable elements in all browsers (opinionated).
:where([aria-disabled="true" i], [disabled]) {
  cursor: not-allowed;
}

// Hidden attribute
// Always hide an element with the `hidden` HTML attribute.
:where([hidden]:not([hidden="until-found"])) {
  display: none !important;
}

// Change the display on visually hidden accessible elements
// in all browsers (opinionated).
:where([aria-hidden="false" i][hidden]) {
  display: initial;
}

:where([aria-hidden="false" i][hidden]:not(:focus)) {
  clip: rect(0, 0, 0, 0);
  position: absolute;
}

:where(.visually-hidden:not(:focus-within, :active)) {
  clip-path: inset(50%) !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden !important;
  position: absolute !important;
  white-space: nowrap !important;
  border: 0 !important;
  user-select: none !important;
}

:where(:focus-visible) {
  outline: 3px solid CanvasText;
  box-shadow: 0 0 0 5px Canvas;
  outline-offset: 1px;
}

:where(:focus-visible, :target) {
  scroll-margin-block: 8vh;
}
